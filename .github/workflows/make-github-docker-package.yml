name: Docker Package

on:
  push:
    branches:
      - master
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master

      - uses: actions/setup-node@v1
        with:
          node-version: '12.x'

      # This block handles the caching and pulling of large files (i.e., our _out files)
      # Caching is necessary because Github LFS is limited to 1GB a month (unlikely we'd hit that but shrug)
      - name: Create LFS file list
        run: git lfs ls-files -l | cut -d' ' -f1 | sort > .lfs-assets-id
      - name: Restore LFS cache
        uses: actions/cache@v2
        id: lfs-cache
        with:
          path: .git/lfs
          key: ${{ runner.os }}-lfs-${{ hashFiles('.lfs-assets-id') }}-v1
      - name: Git LFS Pull
        run: git lfs pull

      - name: docker login
        uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.GPR_BASE_DOCKER_REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: npm install
        run: |
          npm ci
        env:
          GPR_TOKEN: ${{ secrets.GPR_TOKEN }}
          CI: true

      - name: semantic release
        uses: codfish/semantic-release-action@v1
        id: semantic
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GPR_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: docker build and push latest
        run: |
          docker build --build-arg GPR_TOKEN -t $DOCKER_REGISTRY/zokrates-worker/zokrates-worker:latest .
          docker push $DOCKER_REGISTRY/zokrates-worker/zokrates-worker:latest
        env:
          GPR_TOKEN: ${{ secrets.GPR_TOKEN }}
          DOCKER_REGISTRY: ${{ secrets.GPR_DOCKER_REGISTRY }}

      - name: docker push versions
        if: steps.semantic.outputs.new-release-published == 'true'
        run: |
          docker tag $DOCKER_REGISTRY/zokrates-worker/zokrates-worker $DOCKER_REGISTRY/zokrates-worker/zokrates-worker:$VERSION_TAG
          docker tag $DOCKER_REGISTRY/zokrates-worker/zokrates-worker $DOCKER_REGISTRY/zokrates-worker/zokrates-worker:$MAJOR_TAG
          docker push $DOCKER_REGISTRY/zokrates-worker/zokrates-worker:$VERSION_TAG
          docker push $DOCKER_REGISTRY/zokrates-worker/zokrates-worker:$MAJOR_TAG
        env:
          DOCKER_REGISTRY: ${{ secrets.GPR_DOCKER_REGISTRY }}
          VERSION_TAG: v${{ steps.semantic.outputs.release-version }}
          MAJOR_TAG: v${{ steps.semantic.outputs.release-major }}

      - name: docker build and push latest nightfall version
        run: |
          docker build --build-arg GPR_TOKEN -t $DOCKER_REGISTRY/zokrates-worker/zokrates-worker-nightfall:latest nightfall.Dockerfile
          docker push $DOCKER_REGISTRY/zokrates-worker/zokrates-worker-nightfall:latest
        env:
          GPR_TOKEN: ${{ secrets.GPR_TOKEN }}
          DOCKER_REGISTRY: ${{ secrets.GPR_DOCKER_REGISTRY }}

      - name: docker push nightfall specific versions
        if: steps.semantic.outputs.new-release-published == 'true'
        run: |
          docker tag $DOCKER_REGISTRY/zokrates-worker/zokrates-worker-nightfall $DOCKER_REGISTRY/zokrates-worker/zokrates-worker-nightfall:$VERSION_TAG
          docker tag $DOCKER_REGISTRY/zokrates-worker/zokrates-worker-nightfall $DOCKER_REGISTRY/zokrates-worker/zokrates-worker-nightfall:$MAJOR_TAG
          docker push $DOCKER_REGISTRY/zokrates-worker/zokrates-worker-nightfall:$VERSION_TAG
          docker push $DOCKER_REGISTRY/zokrates-worker/zokrates-worker-nightfall:$MAJOR_TAG
        env:
          DOCKER_REGISTRY: ${{ secrets.GPR_DOCKER_REGISTRY }}
          VERSION_TAG: v${{ steps.semantic.outputs.release-version }}
          MAJOR_TAG: v${{ steps.semantic.outputs.release-major }}
